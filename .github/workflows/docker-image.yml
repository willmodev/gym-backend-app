name: Workflow CI-CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Git Semantic Version
      uses: PaulHatch/semantic-version@v4.0.3
      with:
        major_pattern: "major:"
        minor_pattern: "feat:"
        format: "${major}.${minor}.${patch}-prerelease${increment}"
      id: define_version

    - name: Set Ouput
      run: |
        echo "NEW_VERSION=${{ steps.define_version.outputs.version }}" >> $GITHUB_ENV
        echo "${{ steps.define_version.outputs.version }}" > version.txt
    - name: Docker Login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
        
    - name: Build Docker Image
      run: |
        docker build -t lyra14/gym-backend:$NEW_VERSION .
        docker build -t lyra14/gym-backend:latest .
        
    - name: Push Docker Image
      run: |
        docker push lyra14/gym-backend:$NEW_VERSION
        docker push lyra14/gym-backend:latest
    
    outputs:
      version: ${{ steps.set_version.outputs.version }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Set version
      run: |
        echo "NEW_VERSION=$(cat version.txt)" >> $GITHUB_ENV
        
    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} <<EOF
          docker pull lyra14/gym-backend:$NEW_VERSION
          docker run -dp 80:3000 -e DB_HOST=${{ secrets.DB_HOST }} -e DB_USER=${{ secrets.DB_USER }} -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} lyra14/gym-backend:$NEW_VERSION
        EOF

